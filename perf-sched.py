# perf script event handlers, generated by perf script -g python
# Licensed under the terms of the GNU GPL License version 2

from __future__ import print_function

import os
import sys

sys.path.append(os.environ['PERF_EXEC_PATH'] + \
	'/scripts/python/Perf-Trace-Util/lib/Perf/Trace')

from perf_trace_context import *
from Core import *

# A thread becomes ready to run.
def sched__sched_waking(event_name, context, common_cpu,
	common_secs, common_nsecs, common_pid, common_comm,
	common_callchain, comm, pid, prio, target_cpu, 
		perf_sample_dict):
    print("%05u%09u, wake, %d, %d" % (common_secs, common_nsecs, pid, target_cpu))

# A thread starts running on a CPU.
def sched__sched_switch(event_name, context, common_cpu,
	common_secs, common_nsecs, common_pid, common_comm,
	common_callchain, prev_comm, prev_pid, prev_prio, prev_state, 
	next_comm, next_pid, next_prio, perf_sample_dict):
    if next_pid == 0: next_comm = ""
    if prev_pid == 0: prev_comm = ""
    if next_comm.startswith("migration/"): next_comm = ""  # Will show it separately
    print("%05u%09u, switch, %d, %d, %d, %s, %s" % (common_secs, common_nsecs, next_pid, common_cpu, prev_pid, prev_comm, next_comm))

# Guess: a running thread stops and begins moving to a new CPU.
def sched__sched_migrate_task(event_name, context, common_cpu,
	common_secs, common_nsecs, common_pid, common_comm,
	common_callchain, comm, pid, prio, orig_cpu, 
	dest_cpu, perf_sample_dict):
    print("%05u%09u, migrate, %d, %d, %d" % (common_secs, common_nsecs, pid, orig_cpu, dest_cpu))
